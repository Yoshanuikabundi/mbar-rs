{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"bin",
				"bin_n"
			],
			[
				"as_",
				"as_ref()\t  fn as_ref(&self) -> &T"
			],
			[
				"default",
				"default_none"
			],
			[
				"maxim",
				"maximum_iterations"
			],
			[
				"mbar",
				"mbar_obj\t  &PyAny"
			],
			[
				"to_",
				"to_object(…)\t  fn to_object(&self, py: Python) -> PyObject"
			],
			[
				"print",
				"println!(…)\t  #[macro_export]\nmacro_rules! println"
			],
			[
				"initila",
				"initialize"
			],
			[
				"prin",
				"println!(…)\t  #[macro_export]\nmacro_rules! println"
			],
			[
				"Ini",
				"InitialFreeEnergies::Zeros\t  ()"
			],
			[
				"I",
				"InitialFreeEnergies\t  Enum"
			],
			[
				"initial",
				"initial_f_k"
			],
			[
				"relative",
				"relative_tolerance"
			],
			[
				"max",
				"maximum_iterations"
			],
			[
				"Prin",
				"println!(…)\t  #[macro_export]\nmacro_rules! println"
			],
			[
				"format",
				"format!(…)\t  #[macro_export]\nmacro_rules! format"
			],
			[
				"Histo",
				"Histogram4d\t  Variable"
			],
			[
				"His",
				"Histogram4d\t  Struct"
			],
			[
				"write",
				"write_hists"
			],
			[
				"hi",
				"Histogram<…>\t  Struct"
			],
			[
				"is",
				"is_finite"
			],
			[
				"unwrap",
				"unwrap_or"
			],
			[
				"D",
				"DeserializeOwned"
			],
			[
				"as",
				"as_ref()\t  fn as_ref(&self) -> &T"
			],
			[
				"ggggs",
				"ggggs3_bias"
			],
			[
				"println",
				"println!(…)\t  #[macro_export]\nmacro_rules! println"
			],
			[
				"des",
				"deserialize"
			],
			[
				"get",
				"get_displacement\t  pub fn get_displacement(frame: &xdrfile::Frame, i: usize, j: usize) -> [Nanometer<F>; 3]"
			],
			[
				"Vec",
				"Vector3\t  Struct"
			],
			[
				"i",
				"i"
			],
			[
				"fn",
				"Fn\t  Interface"
			],
			[
				"struct",
				"struct\tstruct … { … }"
			],
			[
				"dist",
				"dist"
			],
			[
				"derive",
				"derive(…)\t  EnumMember"
			],
			[
				"Box",
				"BoxMatrix\t  Struct"
			],
			[
				"from",
				"fn from(..)\t  Function"
			],
			[
				"Nano",
				"Nanometer<…>\t  Struct"
			],
			[
				"start",
				"start_time"
			],
			[
				"is_",
				"is_some()\t  pub fn is_some(&self) -> bool"
			],
			[
				"epr",
				"eprint!(…)\t  #[macro_export]\nmacro_rules! eprint"
			],
			[
				"test",
				"tests-mod\ttests-mod"
			],
			[
				"te",
				"tests-mod\ttests-mod"
			],
			[
				"edge",
				"edges4\t  Variable"
			],
			[
				"edg",
				"edges3\t  Variable"
			],
			[
				"Int",
				"IntoIterator\t  Interface"
			],
			[
				"Iterator",
				"ExactSizeIterator\t  Interface"
			],
			[
				"hists",
				"hists_zero"
			],
			[
				"miss",
				"missing_debug_implementations\t  detects missing implementations of Debug"
			],
			[
				"w",
				"warn(…)\t  EnumMember"
			],
			[
				"wa",
				"warn\twarn!(…)"
			],
			[
				"tem",
				"temperature"
			],
			[
				"get_awh",
				"get_awh_bias"
			],
			[
				"target",
				"target_cvs"
			],
			[
				"mac",
				"macro_rules\tmacro_rules! … { … }"
			],
			[
				"macro",
				"macro_rules\tmacro_rules! … { … }"
			],
			[
				"Part",
				"PartialOrd\t  Interface"
			],
			[
				"Resul",
				"Result<…>\t  Enum"
			],
			[
				"Err",
				"Err(…)\t  (E)"
			],
			[
				"As",
				"AsRef\t  Interface"
			],
			[
				"awh",
				"awh_datas"
			],
			[
				"to",
				"to_path_buf()\t  pub fn to_path_buf(&self) -> PathBuf"
			],
			[
				"Path",
				"PathBuf\t  Struct"
			],
			[
				"fold",
				"fold(…)\t  fn fold<B, F>(mut self, init: B, mut f: F) -> B\nwhere\n        Self: Sized,\n        F: FnMut(B, Self::Item) -> B,"
			],
			[
				"rewei",
				"reweight_pmf_to"
			],
			[
				"compute_",
				"compute_fret(…)\t  fn compute_fret(\n    frame: Rc<xdrfile::Frame>,\n    donor_dipole: [usize; 2],\n    acceptor_dipole: [usize; 2],\n    j_integral: Nanometer6<F>,\n    refractive_index: F,\n    donor_yield: Unitless<F>\n) -> (Picosecond<F>, Unitless<F>)"
			],
			[
				"rew",
				"reweight_pmf_to(…)\t  fn reweight_pmf_to(\n    to_cvs: Vec<Nanometer<F>>,\n    from_cvs: Vec<Nanometer<F>>,\n    times: Vec<Picosecond<F>>,\n    awh_datas: Vec<AwhData>,\n    bins: usize\n) -> Histogram"
			],
			[
				"Nanomte",
				"Nanometer"
			],
			[
				"unim",
				"unimplemented!(…)\t  #[macro_export]\nmacro_rules! unimplemented"
			],
			[
				"donor",
				"donor_pos\t  Variable"
			],
			[
				"nano",
				"Nanometer3"
			],
			[
				"Nan",
				"Nanometer"
			],
			[
				"fo",
				"format!(…)\t  #[macro_export]\nmacro_rules! format"
			],
			[
				"ep",
				"epsilon_widths\t  Vec<{unknown}>"
			],
			[
				"vec",
				"Vec<…>\t  Struct"
			],
			[
				"target_cv",
				"target_cv_nomic\t  Vec<{unknown}>"
			],
			[
				"assert_",
				"assert_eq!(…)\t  #[macro_export]\nmacro_rules! assert_eq"
			],
			[
				"break",
				"break\t  Keyword"
			],
			[
				"deriv",
				"derive(…)\t  EnumMember"
			],
			[
				"assert",
				"assert_eq!(…)\t  #[macro_export]\nmacro_rules! assert_eq"
			],
			[
				"series",
				"series_names\t  Vec<String>"
			],
			[
				"min",
				"min_by_key(…)\t  fn min_by_key<B: Ord, F>(self, f: F) -> Option<Self::Item>\nwhere\n        Self: Sized,\n        F: FnMut(&Self::Item) -> B,"
			],
			[
				"Xvg",
				"XvgParseError\t  Struct"
			],
			[
				"X",
				"XvgParseError"
			],
			[
				"deri",
				"derive(…)\t  EnumMember"
			],
			[
				"Xv",
				"XvgParseError\t  Struct"
			],
			[
				"un",
				"unimplemented\tunimplemented!(…)"
			],
			[
				"seri",
				"series_names\t  Vec<String>"
			],
			[
				"for",
				"format\tformat!(…)"
			],
			[
				"extern",
				"extern-crate\textern crate …;"
			],
			[
				"add_ar",
				"add_argument_group"
			],
			[
				"inte",
				"interpolate_gaps"
			],
			[
				"after",
				"after"
			],
			[
				"fall",
				"fallback_chars"
			],
			[
				"fa",
				"fallback_chars"
			],
			[
				"fallback",
				"fallbackfont"
			],
			[
				"gap",
				"gap_around_text"
			],
			[
				"line_ac",
				"line_across_categories"
			],
			[
				"line",
				"linewidth"
			],
			[
				"max_",
				"max_y_turn"
			],
			[
				"cite",
				"cite"
			],
			[
				"sex",
				"set_ff_x_coords"
			],
			[
				"scale",
				"scaled_tree_widths"
			],
			[
				"initia",
				"initialtreeweights"
			],
			[
				"inn",
				"inner_ffs"
			],
			[
				"inner",
				"inner_ys"
			],
			[
				"inner_",
				"inner_xs"
			],
			[
				"ffs",
				"ffs"
			],
			[
				"set_ff",
				"set_ff_y_coords"
			],
			[
				"preamble",
				"preamble_text"
			],
			[
				"pre",
				"preamble_text"
			],
			[
				"height",
				"height_ratio"
			],
			[
				"setx",
				"set_xlabel"
			],
			[
				"try",
				"try\tTry/Except"
			],
			[
				"r0_",
				"R0_line_style"
			],
			[
				"r",
				"r"
			],
			[
				"new",
				"new"
			],
			[
				"latx",
				"latex_lines"
			],
			[
				"n",
				"n"
			],
			[
				"latex",
				"latex_lines"
			],
			[
				"Valuer",
				"ValueError"
			],
			[
				"callout",
				"callout_width"
			],
			[
				"values",
				"values_range"
			],
			[
				"xs",
				"xs_distrib"
			],
			[
				"heigh",
				"height_axes"
			],
			[
				"width",
				"width_axes"
			],
			[
				"if",
				"ifmain\tif __name__ == '__main__'"
			],
			[
				"preambe",
				"preamble_fn"
			],
			[
				"preamb",
				"preamble_fn"
			]
		]
	},
	"buffers":
	[
		{
			"file": "Cargo.toml",
			"settings":
			{
				"buffer_size": 785,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "README.md",
			"settings":
			{
				"buffer_size": 1217,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": ".gitignore",
			"settings":
			{
				"buffer_size": 45,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/main.rs",
			"settings":
			{
				"buffer_size": 578,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/lib.rs",
			"settings":
			{
				"buffer_size": 12330,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/joshmitchell/conda/envs/mdjupyter/lib/python3.7/site-packages/pymbar/mbar.py",
			"settings":
			{
				"buffer_size": 81517,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"server",
				"LSP: Restart Servers"
			],
			[
				"search",
				"Search In Project"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"todo",
				"TodoReview: Project Files"
			],
			[
				"rustfm",
				"RustFmt: Format Buffer"
			],
			[
				"git pull",
				"Git: Pull"
			],
			[
				"lsp",
				"LSP: Enable Language Server in Project"
			],
			[
				"json",
				"Pretty JSON: Format (Pretty Print) JSON"
			],
			[
				"terminu",
				"Terminus: List Shells"
			],
			[
				"lsp key",
				"Preferences: LSP Keybindings"
			],
			[
				"git pul",
				"Git: Pull"
			],
			[
				"terminus",
				"Terminus: List Shells"
			],
			[
				"con",
				"Conda: Install Package"
			],
			[
				"conda",
				"Conda: Install Package"
			],
			[
				"conda list",
				"Conda: List Packages"
			],
			[
				"package ",
				"Package Control: List Packages"
			],
			[
				"up",
				"Package Control: Upgrade Package"
			],
			[
				"condacreat",
				"Conda: Create Environment from environment.yml"
			],
			[
				"conda ",
				"Conda: List Environments"
			],
			[
				"conda acti",
				"Conda: Activate Environment"
			],
			[
				"conda create",
				"Conda: Create Environment from environment.yml"
			],
			[
				"termin",
				"Terminus: List Shells"
			],
			[
				"te",
				"Terminus: List Shells"
			],
			[
				"term",
				"Terminus: List Shells"
			],
			[
				"citer",
				"Preferences: JAMCiter"
			],
			[
				"syntax mat",
				"Set Syntax: MathademicMarkdown"
			],
			[
				"overr",
				"OverrideAudit: Diff Single Override"
			],
			[
				"overri",
				"OverrideAudit: Create Override"
			],
			[
				"color  ",
				"UI: Select Color Scheme"
			],
			[
				"mat",
				"Set Syntax: MathademicMarkdown"
			],
			[
				"matha",
				"Set Syntax: MathademicMarkdown"
			],
			[
				"syntax ma",
				"Set Syntax: MathademicMarkdown"
			],
			[
				"color",
				"UI: Select Color Scheme"
			],
			[
				"markdown",
				"Set Syntax: Markdown"
			],
			[
				"highlight",
				"Highlight Duplicates: Toggle Highlighting"
			],
			[
				"isntall",
				"Package Control: Install Package"
			],
			[
				"lint",
				"SublimeLinter: Goto Error"
			],
			[
				"lipsum",
				"Snippet: Lorem ipsum"
			],
			[
				"termu",
				"Terminus Utilities: Select Theme"
			],
			[
				"word ",
				"Word Wrap: Toggle"
			],
			[
				"spell",
				"Google Spell Check"
			],
			[
				"termi",
				"Terminus: Open Default Shell in View"
			],
			[
				"view",
				"View Package File"
			],
			[
				"remove re",
				"Package Control: Remove Repository"
			],
			[
				"remove ",
				"Package Control: Remove Package"
			],
			[
				"view fil",
				"View Package File"
			],
			[
				"unicode loo",
				"Unicode Completion: Unicode Lookup"
			],
			[
				"unicdoe rer",
				"Unicode Completion: Unicode Reverse Lookup"
			],
			[
				"view p",
				"View Package File"
			],
			[
				"view fi",
				"View Package File"
			],
			[
				"unicode",
				"Unicode Completion: Unicode Lookup"
			],
			[
				"open extern",
				"File: Open this file with an external application"
			],
			[
				"Package Control: ",
				"Package Control: Create Package File"
			],
			[
				"add repo",
				"Package Control: Add Repository"
			],
			[
				"new menu",
				"PackageDev: New Main Menu File…"
			],
			[
				"convert color",
				"PackageDev: Convert to YAML and Rearrange Syntax Definition"
			],
			[
				"convert",
				"Convert Color Scheme"
			],
			[
				"theme",
				"UI: Select Theme"
			],
			[
				"lor",
				"Snippet: Lorem ipsum"
			],
			[
				"syntax math",
				"Set Syntax: MathademicMarkdown"
			],
			[
				"extra",
				"Extract Sublime Package: Extract all packages"
			],
			[
				"termial",
				"Terminal: Open"
			],
			[
				"git comm",
				"Git: Commit"
			],
			[
				"git add",
				"Git: Add Selected Hunk"
			],
			[
				"list",
				"Package Control: List Packages"
			],
			[
				"latex",
				"LaTeXTools: Check system"
			],
			[
				"remo",
				"Package Control: Remove Package"
			],
			[
				"autof",
				"AutoFileName: Default Settings"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"package",
				"Package Control: Install Package"
			],
			[
				"terminus vie",
				"Terminus: Open Default Shell in View"
			],
			[
				"mark",
				"MarkdownEditing: Change color scheme..."
			],
			[
				"lua",
				"Set Syntax: Lua"
			],
			[
				"set syntax tex",
				"Set Syntax: LaTeX"
			],
			[
				"push",
				"Git: Push"
			],
			[
				"git commit",
				"Git: Commit"
			],
			[
				"conflit",
				"Git Conflict Resolver: Find Next Conflict"
			],
			[
				"citer sea",
				"Citer: Search"
			],
			[
				"prof",
				"Plugin Development: Profile Events"
			],
			[
				"profile",
				"Plugin Development: Profile Events"
			],
			[
				"package open",
				"PackageDev: Open Package"
			],
			[
				"git status",
				"Git: Status"
			],
			[
				"create ",
				"PackageDev: Create Package"
			],
			[
				"view ",
				"View Package File"
			],
			[
				"view pa",
				"View Package File"
			],
			[
				"set mat",
				"Set Syntax: MathademicMarkdown"
			],
			[
				"set matha",
				"Set Syntax: MathademicMarkdown"
			],
			[
				"packagecontrol",
				"Package Control: Install Package"
			],
			[
				"lorem",
				"Snippet: Lorem ipsum"
			],
			[
				"sublime-syn",
				"Plugin Development: Convert Syntax to .sublime-syntax"
			],
			[
				"packagedev",
				"PackageDev: Convert (YAML, JSON, PList) to…"
			],
			[
				"create",
				"PackageDev: Create Package"
			],
			[
				"code folding",
				"Code Folding: Fold Tag Attributes"
			],
			[
				"fold",
				"Code Folding: Unfold All"
			],
			[
				"syntax latex",
				"Set Syntax: LaTeX"
			],
			[
				"syntax yaml",
				"Set Syntax: YAML"
			],
			[
				"math",
				"Snippet: Display Math — \\[ … \\]"
			],
			[
				"syntax",
				"PackageDev: Convert to YAML and Rearrange Syntax Definition"
			],
			[
				"markdown pre",
				"Markdown HTML Preview"
			],
			[
				"satis",
				"Package Control: Satisfy Dependencies"
			],
			[
				"package repo",
				"Preferences: Package Control Settings – User"
			],
			[
				"update",
				"Package Control: Upgrade/Overwrite All Packages"
			],
			[
				"google",
				"Google Spell Check"
			],
			[
				"searc",
				"Citer: Search"
			],
			[
				"preview",
				"MarkdownLivePreview: Edit Current File"
			],
			[
				"markd",
				"MarkdownEditing: Change color scheme..."
			],
			[
				"markdown live",
				"Preferences: MarkdownLivePreview Settings"
			],
			[
				"markdownpr",
				"Markdown Preview: Preview in Browser"
			],
			[
				"color scheme",
				"UI: Select Color Scheme"
			],
			[
				"ov",
				"OverrideAudit: Diff Single Override"
			],
			[
				"sort",
				"Sort Lines"
			],
			[
				"confl",
				"Git Conflict Resolver: Find Next Conflict"
			],
			[
				"replace",
				"Inline Python: Replace with str()"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"sear",
				"Citer: Search"
			],
			[
				"upgra",
				"Package Control: Upgrade Package"
			],
			[
				"package control",
				"Package Control: List Packages"
			],
			[
				"buil",
				"Build With: LaTeX - PdfLaTeX"
			],
			[
				"build",
				"Build With: LaTeX - PdfLaTeX"
			],
			[
				"cite",
				"CiteBibTeX: Extract citations in current file"
			],
			[
				"install c",
				"Package Control: Install Package"
			],
			[
				"git push",
				"Git: Push"
			],
			[
				"commit",
				"Git: Commit"
			],
			[
				"git",
				"Git: Status"
			],
			[
				"status",
				"Git: Status"
			],
			[
				"git c",
				"Git: Commit"
			],
			[
				"add",
				"Git: Add..."
			]
		],
		"width": 551.0
	},
	"console":
	{
		"height": 279.0,
		"history":
		[
			"sublime.active_window().run_command('exec', {'cmd': ['echo', '1'], 'encoding': 'utf-8'})",
			"sublime.active_window().run_command('exec', {'cmd': ['echo', 1], 'encoding': 'utf-8'})",
			"sublime.active_window().run_command('exec', {'cmd': 'echo 1', 'encoding': 'utf-8'})",
			"sublime.active_window().run_command('exec', {'cmd': 'pwd', 'encoding': 'utf-8'})",
			"sublime.active_window().run_command('exec', {'cmd': 'pwd'})",
			"sublime.active_window()",
			"sublime.get_active_window()",
			"dateutil.__path__",
			"dir(dateutil)",
			"import dateutil",
			"dateutil.__path__",
			"dir(dateutil)",
			"dateutil.",
			"import dateutil.parser",
			"import dateutil",
			"pathlib.all.pathlib.Path",
			"pathlib.all.pathlib.All",
			"import pathlib.all.pathlib.Path",
			"import pathlib.all.pathlib",
			"pathlib.all.pathlib",
			"pathlib.all.pathlib.Path",
			"pathlib.all.Path",
			"import pathlib.all",
			"pathlib.__path__",
			"pathlib.__package__",
			"pathlib.__initializing__",
			"dir(pathlib)",
			"pathlib.Path",
			"import pathlib",
			"import",
			"sublime.load_settings('GitMarkdownLiaison.sublime-settings').get('sentence_newline_selector')",
			"sublime.active_window().active_view().find_by_selector(\"text.html.markdown meta.paragraph\")",
			"sublime.active_window().active_view().find_by_selector(\"text.html.markdown meta.paragraph.markdown\")",
			"sublime.active_window().active_view().find_by_selector(\"text.html.markdown meta.paragraph\")",
			"sublime.load_settings('GitMarkdownLiaison.sublime-settings').get('sentence_newline_selector')",
			"sublime.active_window().active_view().settings().get('sentence_newline_selector')",
			"sublime.active_window().active_view().settings().get('remove_trailing_whitespace_on_save')",
			"sublime.active_window().active_view().settings().get('preview_math_scope')",
			"sublime.active_window().active_view().settings()",
			"sublime.active_window().active_view()",
			"sublime.active_window()",
			"sublime.active_view()",
			"sublime.active_window().active_view().settings().get('syntax')",
			"sublime.active_window().active_view()",
			"sublime.active_window()",
			"sublime.get_active_window()",
			"sublime.active_window().active_view().settings().get('remove_trailing_whitespace_on_save')",
			"sublime.active_window().active_view().settings().get_setting('remove_trailing_whitespace_on_save')",
			"sublime.active_window().active_view().get_settings()",
			"sublime.active_window().active_view().id()",
			"sublime.active_window().active_view().set_scratch(False)",
			"sublime.active_window().active_view().is_scratch()",
			"sublime.active_window().active_view().set_scratch(False)",
			"sublime.active_window().active_view().is_scratch()",
			"sublime.active_window().active_view().id()",
			"sublime.active_window().active_view().set_scratch(False)",
			"sublime.active_window().active_view().id()",
			"sublime.active_window().active_view().set_scratch(False)",
			"sublime.active_window().active_view().is_scratch()",
			"sublime.active_window().active_view().set_scratch(False)",
			"sublime.active_window().active_view().id()",
			"sublime.active_window().active_view().name()",
			"sublime.active_window().active_view().file_name()",
			"sublime.active_window().active_view().set_scratch(False)",
			"sublime.active_window().active_view().is_scratch()",
			"sublime.active_window().active_view().buffer_id()",
			"sublime.active_window().active_view().set_scratch(False)",
			"sublime.load_settings('GML_state.sublime-settings').get('views')",
			"sublime.load_settings('GML_state.sublime-settings')",
			"sublime.active_window().active_view().is_scratch()",
			"sublime.active_window().active_view().set_scratch(False)",
			"sublime.active_window().active_view().is_scratch()",
			"sublime.active_window().active_view().id()",
			"sublime.active_window().active_view().is_scratch()",
			"sublime.active_window().active_view().get_scratch()",
			"sublime.active_window().active_view().id()",
			"sublime.active_window().active_view().set_scratch(False)",
			"sublime.active_window().active_view().id()",
			"sublime.active_window().active_view().set_scratch(False)",
			"sublime.active_window().active_view().id()",
			"sublime.active_window().active_view().set_scratch(False)",
			"GitMarkdownLiaison.GitMarkdownLiaisonListener",
			"GitMarkdownLiaisonGitMarkdownLiaisonListener",
			"GitMarkdownLiaisonListener",
			"import GitMarkdownLiaison",
			"GitMarkdownLiaisonListener",
			"sublime.active_window().active_view().set_scratch(False)",
			"sublime.active_window().active_view().is_scratch()",
			"sublime.active_window().active_view().is_scrratch()",
			"sublime.active_window().active_view().file_name()",
			"sublime.active_window().active_view()",
			"sublime.active_window()",
			"sublime.active_view()",
			"active_window()",
			"clear()",
			"clear",
			"print($PATH)",
			"print(PATH)",
			"print PATH",
			"print $PATH",
			"$PATH",
			"echo $PATH",
			"remote_edit_open_remote_file(\"raijin\", \"/short/q95/jam502/resub_template.sh\")",
			"remote_edit_open_remote_file \"raijin\" \"/short/q95/jam502/resub_template.sh\"",
			"remote_edit_open_remote_file raijin /short/q95/jam502/resub_template.sh",
			"sftp",
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/joshmitchell/Projects/mbar-rs",
		"/home/joshmitchell/Projects/mbar-rs/src"
	],
	"file_history":
	[
		"/home/joshmitchell/Projects/mbar-rs/LICENSE-APACHE",
		"/home/joshmitchell/Projects/mbar-rs/src/bin.rs",
		"/home/joshmitchell/Projects/pyo3-mcve/Cargo.toml",
		"/home/joshmitchell/Projects/pyo3-mcve/src/main.rs",
		"/home/joshmitchell/conda/envs/mdjupyter/lib/python3.7/site-packages/pymbar/mbar_solvers.py",
		"/home/joshmitchell/conda/envs/mdjupyter/lib/python3.7/site-packages/pymbar/mbar.py",
		"/home/joshmitchell/conda/envs/mdjupyter/lib/python3.7/site-packages/pymbar/mbar",
		"/store/joshmitchell/dye-gly/MARTINI AWH/awhl-rs/reweighted_pmf.awh_only.mdld.xvg",
		"/store/joshmitchell/dye-gly/MARTINI AWH/awhl-rs/reweighted_pmf.EAAAK.fret.xvg",
		"/store/joshmitchell/dye-gly/MARTINI AWH/awhl-rs/reweighted_pmf.GGGGS3.fret.xvg",
		"/store/joshmitchell/dye-gly/MARTINI AWH/from_gadi/run000/prod.gro",
		"/store/joshmitchell/dye-gly/MARTINI AWH/awhl-rs/reweighted_pmf.NANP.dist.xvg",
		"/store/joshmitchell/dye-gly/MARTINI AWH/from_gadi/topol.top",
		"/store/joshmitchell/linkers/REST2/NANP3/4_prod/300.00/prod.gro",
		"/store/joshmitchell/linkers/REST2/EAAAK3/from_raijin/300.00/prod.gro",
		"/store/joshmitchell/dye-gly/MARTINI AWH/awhl-rs/.gitignore",
		"/store/joshmitchell/dye-gly/MARTINI AWH/awhl-rs/src/awh.rs",
		"/home/joshmitchell/.config/sublime-text-3/Packages/User/TodoReview.sublime-settings",
		"/store/joshmitchell/dye-gly/MARTINI AWH/awhl-rs/src/xtc.rs",
		"/store/joshmitchell/dye-gly/MARTINI AWH/awhl-rs/src/colvars.rs",
		"/store/joshmitchell/dye-gly/MARTINI AWH/awhl-rs/src/geometry.rs",
		"/store/joshmitchell/dye-gly/MARTINI AWH/awhl-rs/src/lib.rs",
		"/store/joshmitchell/dye-gly/MARTINI AWH/awhl-rs/src/histogram.rs",
		"/store/joshmitchell/dye-gly/MARTINI AWH/awhl-rs/src/units.rs",
		"/store/joshmitchell/dye-gly/MARTINI AWH/awhl-rs/src/xvg.rs",
		"/store/joshmitchell/dye-gly/MARTINI AWH/awhl-rs/Cargo.toml",
		"/store/joshmitchell/dye-gly/MARTINI AWH/awhl-rs/units_expanded.rs",
		"/store/joshmitchell/dye-gly/MARTINI AWH/awhl-rs/awhl-rs.sublime-project",
		"/store/joshmitchell/dye-gly/MARTINI AWH/awhl-rs/src/opt.rs",
		"/store/joshmitchell/dye-gly/MARTINI AWH/from_gadi/run000/prod.log",
		"/store/joshmitchell/dye-gly/MARTINI AWH/awhl-rs/katex.html",
		"/home/joshmitchell/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/str/mod.rs",
		"/home/joshmitchell/Documents/rangefinder/README.md",
		"/store/joshmitchell/dye-gly/MARTINI AWH/from_gadi/run000/prod.vis.pdb",
		"/home/joshmitchell/Documents/rangefinder/rangefinder.py",
		"/home/joshmitchell/Documents/cv/resume.yml",
		"/store/joshmitchell/dye-gly/MARTINI AWH/from_gadi/run000/reweighted_pmf.dat",
		"/home/joshmitchell/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/str/pattern.rs",
		"/home/joshmitchell/.cache/.fr-uo8rSj/final_GMXPBSAtool/CPC-README",
		"/home/joshmitchell/.cache/.fr-qCgJan/DEMO/EXAMPLE1/INPUT.dat",
		"/home/joshmitchell/Documents/thesis/test.log",
		"/home/joshmitchell/Documents/thesis/include/scripts/pandoc.py",
		"/home/joshmitchell/Documents/thesis/include/scripts/filter.py",
		"/home/joshmitchell/conda/envs/mdjupyter/lib/python3.7/site-packages/panflute/elements.py",
		"/store/joshmitchell/dye-gly/MARTINI AWH/from_gadi/run000/awh/awh_t0.xvg",
		"/store/joshmitchell/dye-gly/MARTINI AWH/from_gadi/run000/prod_pullx.xvg",
		"/store/joshmitchell/dye-gly/MARTINI AWH/from_gadi/run000/awh/awh_t100000.xvg",
		"/store/joshmitchell/dye-gly/MARTINI AWH/from_gadi/run000/awh/awh_t9000.xvg",
		"/store/joshmitchell/dye-gly/MARTINI AWH/from_gadi/run000/awh/awh_t88000.xvg",
		"/store/joshmitchell/dye-gly/MARTINI AWH/from_gadi/index.ndx",
		"/home/joshmitchell/.vmdrc.py",
		"/home/joshmitchell/bin/python_packages/VMDPythonKit.py",
		"/home/joshmitchell/.homesick/repos/dotfiles/setup/conda_env.yml",
		"/home/joshmitchell/Documents/thesis/jam-thesis.sublime-project",
		"/home/joshmitchell/Documents/thesis/environment.yml",
		"/store/joshmitchell/linkers/REST2/A4/3_prod/300.00/prod.gro",
		"/store/joshmitchell/linkers/REST2/AA1/3_prod/300.00/prod.gro",
		"/store/joshmitchell/linkers/REST2/EAAAK3/4_prod/300.00/prod.gro",
		"/store/joshmitchell/linkers/REST2/NANP1/4_prod/300.00/prod.gro",
		"/store/joshmitchell/linkers/REST2/GGGGS3/3_prod/300.00/prod.gro",
		"/store/joshmitchell/linkers/REST2/GGGGS3/3_prod/300.00/prod.log",
		"/home/joshmitchell/Documents/thesis/goals.md",
		"/home/joshmitchell/Documents/thesis/include/scripts/config_thesis.py",
		"/home/joshmitchell/Documents/thesis/references.bib",
		"/home/joshmitchell/Documents/thesis/include/jamthesis.cls",
		"/home/joshmitchell/Documents/thesis/CONFIG.yml",
		"/home/joshmitchell/Documents/thesis/images/ecfp_martini_map.svg",
		"/store/joshmitchell/dye-gly/MARTINI AWH/01-setup-cfp/forcefield.itp",
		"/store/joshmitchell/dye-gly/MARTINI AWH/03-prod/martini_v2.2P_aminoacids.itp",
		"/store/joshmitchell/dye-gly/MARTINI AWH/03-prod/forcefield.itp",
		"/store/joshmitchell/dye-gly/MARTINI AWH/03-prod/topol.top",
		"/home/joshmitchell/Documents/thesis/frontmatter/abbreviations.md",
		"/home/joshmitchell/Documents/thesis/chapters/06-linkers.md",
		"/store/joshmitchell/dye-gly/MARTINI AWH/01-setup-cfp/2wsn_sv_relaxed.pdb",
		"/store/joshmitchell/dye-gly/MARTINI AWH/01-setup-cfp/2WSN_sv_A+2WSN_sv_A2.itp",
		"/store/joshmitchell/dye-gly/MARTINI AWH/01-setup-cfp/2WSN_sv_A.itp",
		"/store/joshmitchell/dye-gly/MARTINI AWH/01-setup-cfp/crf_cg.itp",
		"/store/joshmitchell/dye-gly/MARTINI AWH/01-setup-cfp/crf_cg_shift.itp",
		"/store/joshmitchell/dye-gly/MARTINI AWH/01-setup-cfp/2WSN_sv.itp",
		"/store/joshmitchell/dye-gly/MARTINI AWH/01-setup-cfp/2WSN_sv_m22p.pdb",
		"/store/joshmitchell/dye-gly/MARTINI AWH/02-setup-both/topol.top",
		"/store/joshmitchell/dye-gly/MARTINI AWH/02-setup-both/forcefield.itp",
		"/home/joshmitchell/bin/python_packages/JupyterJoy/funfuncs.py",
		"/store/joshmitchell/dye-gly/MARTINI AWH/02-setup-both/refpol.pdb",
		"/store/joshmitchell/dye-gly/MARTINI AWH/02-setup-both/ions.itp",
		"/home/joshmitchell/.cache/.fr-nwa8lD/ions.itp",
		"/store/joshmitchell/dye-gly/MARTINI AWH/02-setup-both/refpol.itp",
		"/store/joshmitchell/dye-gly/MARTINI AWH/02-setup-both/3IP5_ayw.itp",
		"/store/joshmitchell/dye-gly/MARTINI AWH/01-setup-cfp/chromophore/03-pycgtool/crf_cg.itp",
		"/store/joshmitchell/dye-gly/MARTINI AWH/01-setup-cfp/chromophore/03-pycgtool/out.itp",
		"/store/joshmitchell/dye-gly/MARTINI AWH/02-setup-both/2WSN_sv.itp",
		"/store/joshmitchell/dye-gly/MARTINI AWH/01-setup-cfp/crf_cg.pdb",
		"/store/joshmitchell/dye-gly/MARTINI AWH/01-setup-cfp/martinize.py",
		"/store/joshmitchell/dye-gly/MARTINI AWH/01-setup-cfp/topol.top",
		"/store/joshmitchell/dye-gly/MARTINI AWH/02-setup-both/sol_box.gro",
		"/home/joshmitchell/.cache/.fr-TsrGyE/forcefield.itp",
		"/store/joshmitchell/dye-gly/MARTINI AWH/01-setup-cfp/out.gro",
		"/store/joshmitchell/dye-gly/MARTINI AWH/01-setup-cfp/chromophore/04-valmd-setup/crf_cg.itp",
		"/home/joshmitchell/bin/python_packages/JupyterJoy/bin/martinize.py",
		"/store/joshmitchell/dye-gly/MARTINI AWH/00-setup-ayw/chain_A.ssd",
		"/store/joshmitchell/dye-gly/MARTINI AWH/00-setup-ayw/3IP5_ayw_relaxed.pdb",
		"/store/joshmitchell/dye-gly/MARTINI AWH/00-setup-ayw/3IP5_ayw_A.itp",
		"/store/joshmitchell/dye-gly/MARTINI AWH/01-setup-cfp/chromophore/03-pycgtool/out.gro",
		"/home/joshmitchell/Documents/thesis/frontmatter/abstract.md",
		"/home/joshmitchell/Documents/thesis/frontmatter/acknowledgements.md",
		"/home/joshmitchell/Documents/thesis/frontmatter/declaration.md",
		"/home/joshmitchell/Documents/thesis/images/fret_theory/make_plot.py",
		"/home/joshmitchell/Documents/thesis/images/pbc.svg",
		"/home/joshmitchell/Documents/thesis/.gitignore",
		"/home/joshmitchell/Documents/thesis/chapters/03-rangefinder.md",
		"/home/joshmitchell/Documents/thesis/chapters/01-intro.md",
		"/home/joshmitchell/Documents/thesis/images/pbc/.gitignore",
		"/home/joshmitchell/Documents/.gitignore",
		"/home/joshmitchell/.gitignore",
		"/home/joshmitchell/gitignore",
		"/home/joshmitchell/Documents/thesis/images/pbc/rdb.png",
		"/store/joshmitchell/dye-gly/MARTINI AWH/01-setup-cfp/chromophore/05-valmd-equil/crf_cg.itp",
		"/store/joshmitchell/dye-gly/MARTINI AWH/01-setup-cfp/chromophore/04-valmd-setup/forcefield.itp",
		"/store/joshmitchell/dye-gly/MARTINI AWH/01-setup-cfp/chromophore/04-valmd-setup/martini_v2.2P_aminoacids.itp",
		"/store/joshmitchell/dye-gly/svECFP_polish/chromophore/03-pdb2gmx/a99SBdisp_crf.ff/aminoacids.rtp",
		"/store/joshmitchell/dye-gly/MARTINI AWH/01-setup-cfp/chromophore/crf_cg.itp",
		"/store/joshmitchell/dye-gly/MARTINI AWH/01-setup-cfp/chromophore/03-pycgtool/pycgtool/pycgtool.py",
		"/store/joshmitchell/dye-gly/MARTINI AWH/01-setup-cfp/chromophore/03-pycgtool/pycgtool/pycgtool/interface.py",
		"/store/joshmitchell/dye-gly/MARTINI AWH/01-setup-cfp/chromophore/03-pycgtool/pycgtool/pycgtool/pycgtool.py",
		"/store/joshmitchell/dye-gly/MARTINI AWH/01-setup-cfp/chromophore/03-pycgtool/pycgtool/pycgtool/mapping.py",
		"/store/joshmitchell/dye-gly/MARTINI AWH/01-setup-cfp/chromophore/03-pycgtool/pycgtool/pycgtool/bondset.py",
		"/store/joshmitchell/dye-gly/MARTINI AWH/01-setup-cfp/chromophore/03-pycgtool/pycgtool/pycgtool/functionalforms.py",
		"/home/joshmitchell/Documents/thesis/.latexmkrc"
	],
	"find":
	{
		"height": 39.0
	},
	"find_in_files":
	{
		"height": 154.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"computeUnnor",
			"solve_mbar",
			"mbar_sol",
			"()),",
			"N_MAX"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"N_TOT"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": false,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "Cargo.toml",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 785,
						"regions":
						{
						},
						"selection":
						[
							[
								431,
								431
							]
						],
						"settings":
						{
							"WordCount":
							{
								"changes": 261,
								"count": 57,
								"modified": false,
								"selection": false,
								"status": -1,
								"syntax": "plain text"
							},
							"syntax": "Packages/TOML/TOML.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "README.md",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1217,
						"regions":
						{
						},
						"selection":
						[
							[
								1184,
								1184
							]
						],
						"settings":
						{
							"WordCount":
							{
								"changes": 612,
								"count": 112,
								"modified": false,
								"selection": false,
								"status": -1,
								"syntax": "plain text"
							},
							"syntax": "Packages/MathademicMarkdown/MathademicMarkdown.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": ".gitignore",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 45,
						"regions":
						{
						},
						"selection":
						[
							[
								44,
								44
							]
						],
						"settings":
						{
							"WordCount":
							{
								"changes": 2,
								"count": 3,
								"modified": false,
								"selection": false,
								"status": -1,
								"syntax": "plain text"
							},
							"syntax": "Packages/Git Formats/Git Ignore.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "src/main.rs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 578,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"WordCount":
							{
								"changes": 442,
								"count": 27,
								"modified": false,
								"selection": true,
								"status": -1,
								"syntax": "plain text"
							},
							"auto_complete_triggers":
							[
								{
									"characters": ".:",
									"selector": "source.rust"
								}
							],
							"lsp_active": true,
							"lsp_language":
							{
								"rust-analyzer": "rust"
							},
							"show_definitions": false,
							"syntax": "Packages/Rust Enhanced/RustEnhanced.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "src/lib.rs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 12330,
						"regions":
						{
						},
						"selection":
						[
							[
								7105,
								7105
							]
						],
						"settings":
						{
							"WordCount":
							{
								"changes": 7252,
								"count": 931,
								"modified": false,
								"selection": false,
								"status": -1,
								"syntax": "plain text"
							},
							"auto_complete_triggers":
							[
								{
									"characters": ".:",
									"selector": "source.rust"
								}
							],
							"lsp_active": true,
							"lsp_language":
							{
								"rust-analyzer": "rust"
							},
							"show_definitions": false,
							"syntax": "Packages/Rust Enhanced/RustEnhanced.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 3735.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "/home/joshmitchell/conda/envs/mdjupyter/lib/python3.7/site-packages/pymbar/mbar.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 81517,
						"regions":
						{
						},
						"selection":
						[
							[
								66153,
								66153
							]
						],
						"settings":
						{
							"WordCount":
							{
								"changes": -1,
								"modified": true,
								"selection": true,
								"status": -1,
								"syntax": "python"
							},
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 25964.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 27.0
	},
	"input":
	{
		"height": 63.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.SublimeLinter":
	{
		"height": 0.0
	},
	"output.diagnostics":
	{
		"height": 126.0
	},
	"output.find_results":
	{
		"height": 110.0
	},
	"output.mdpopups":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "mbar-rs.sublime-project",
	"replace":
	{
		"height": 70.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Documents/thesis/jam-standalone-litreview.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"# Solving the Sampling Problem\n"
			]
		],
		"width": 592.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 313.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
